const _ = require('lodash')
const input = `
	.###..#######..####..##...#
	########.#.###...###.#....#
	###..#...#######...#..####.
	.##.#.....#....##.#.#.....#
	###.#######.###..##......#.
	#..###..###.##.#.#####....#
	#.##..###....#####...##.##.
	####.##..#...#####.#..###.#
	#..#....####.####.###.#.###
	#..#..#....###...#####..#..
	##...####.######....#.####.
	####.##...###.####..##....#
	#.#..#.###.#.##.####..#...#
	..##..##....#.#..##..#.#..#
	##.##.#..######.#..#..####.
	#.....#####.##........#####
	###.#.#######..#.#.##..#..#
	###...#..#.#..##.##..#####.
	.##.#..#...#####.###.##.##.
	...#.#.######.#####.#.####.
	#..##..###...###.#.#..#.#.#
	.#..#.#......#.###...###..#
	#.##.#.#..#.#......#..#..##
	.##.##.##.#...##.##.##.#..#
	#.###.#.#...##..#####.###.#
	#.####.#..#.#.##.######.#..
	.#.#####.##...#...#.##...#.
`
	.trim()
	.split('\n')
	.map(l => l.trim().split(''))

const res = _
	.chain(input)
	.map((row, y, rows) => row.map((col, x, cols) =>
		col == '#' ? [y, x] : -1
	))
	.flatten()
	.filter(r => r != -1)
	.map(([y0, x0], i, arr) => [
		y0, x0,
		_
			.chain([...arr.slice(0, i), ...arr.slice(i+1)])
			.map(([y1, x1]) => [
				y1, x1,
				Math.atan2(y1 - y0, x1 - x0)
			])
			.uniqBy(([,,angle]) => angle)
			.value()
	])
	.map(a => [a[2].length, ...a])
	.sort(([a], [b]) => b-a)
	.take(1)
	.tap(console.table)
	.value()


